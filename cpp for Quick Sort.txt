#include <iostream> 
using namespace std; 
 
// QuickSort Function 
void quickSort(int *arr, int low, int high) { 
    int i = low, j = high; 
    int pivot = arr[(low + high) / 2]; // Choose middle element as pivot 
 
    while (i <= j) { 
        while (arr[i] < pivot) i++; 
        while (arr[j] > pivot) j--; 
 
        if (i <= j) { 
            swap(arr[i], arr[j]); // Swap elements 
            i++; 
            j--; 
        } 
    } 
 
    // Recursively sort the two halves 
    if (low < j) 
        quickSort(arr, low, j); 
    if (i < high) 
        quickSort(arr, i, high); 
} 
 
int main() { 
    int n; 
 
    cout << "Enter the number of elements in the array: "; 
    cin >> n; 
 
    int arr[n]; 
    cout << "Enter the elements of the array:\n"; 
    for (int i = 0; i < n; i++) { 
        cout << "arr[" << i << "]: "; 
        cin >> arr[i]; 
    } 
 
    // Perform QuickSort 
    quickSort(arr, 0, n - 1); 
 
    // Output the sorted array 
    cout << "The sorted array is:\n"; 
    for (int i = 0; i < n; i++) { 
        cout << arr[i] << endl; 
    } 
 
    return 0; 
}





/*Output: 
 
  Enter the number of elements in the array: 6 
 
Enter the elements of the array: 
arr[0]: 42 
arr[1]: 17 
arr[2]: 33 
arr[3]: 8 
arr[4]: 25 
arr[5]: 90 
 
The sorted array is: 
8 
17 
25 
33 
42 
90 */